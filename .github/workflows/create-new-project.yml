name: Create New Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the new project'
        required: true

jobs:
  create-project:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Create Repositories
      id: create_repos
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo="Javid1e/${project_name}"
        backend_repo="Javid1e/${project_name}_backend"
        frontend_repo="Javid1e/${project_name}_frontend"
        dockerize_repo="Javid1e/${project_name}_dockerize"

        # Create main repository
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}\", \"private\": false}"

        # Create submodule repositories
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_backend\", \"private\": false}"
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_frontend\", \"private\": false}"
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_dockerize\", \"private\": false}"

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git config --global url."git@github.com:".insteadOf "https://github.com/"

    - name: Initialize New Project
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo_url="git@github.com:Javid1e/${project_name}.git"
        backend_repo_url="git@github.com:Javid1e/${project_name}_backend.git"
        frontend_repo_url="git@github.com:Javid1e/${project_name}_frontend.git"
        dockerize_repo_url="git@github.com:Javid1e/${project_name}_dockerize.git"

        new_project_dir=$project_name

        # Clone template repository with authentication
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git clone --recurse-submodules git@github.com:Javid1e/full_django_nextjs_dockerize_template.git $new_project_dir
        cd $new_project_dir

        # Set new remotes for the main project
        git remote set-url origin $main_repo_url

        # Set new remotes for submodules
        git submodule set-url backend $backend_repo_url
        git submodule set-url frontend $frontend_repo_url
        git submodule set-url dockerize $dockerize_repo_url
        git submodule update --init --recursive

        # Push changes to the main repository
        git add .
        git commit -m "Initialize new project with submodules"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push -u origin main

    - name: Setup Frontend Branch
      run: |
        cd $new_project_dir
        git checkout -b frontend
        git submodule update --init --recursive
        cd frontend
        git remote set-url origin "git@github.com:Javid1e/${project_name}_frontend.git"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push -u origin main
        cd ..
        git add .
        git commit -m "Setup frontend branch"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push origin frontend

    - name: Setup Backend Branch
      run: |
        cd $new_project_dir
        git checkout -b backend
        git submodule update --init --recursive
        cd backend
        git remote set-url origin "git@github.com:Javid1e/${project_name}_backend.git"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push -u origin main
        cd ..
        git add .
        git commit -m "Setup backend branch"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push origin backend

    - name: Setup Dockerize Branch
      run: |
        cd $new_project_dir
        git checkout -b dockerize
        git submodule update --init --recursive
        cd dockerize
        git remote set-url origin "git@github.com:Javid1e/${project_name}_dockerize.git"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push -u origin main
        cd ..
        git add .
        git commit -m "Setup dockerize branch"
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git push origin dockerize
