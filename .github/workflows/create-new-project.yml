name: Create New Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the new project'
        required: true

jobs:
  create-project:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SECRET }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Create Repositories
      id: create_repos
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo="Javid1e/${project_name}"
        backend_repo="Javid1e/${project_name}_backend"
        frontend_repo="Javid1e/${project_name}_frontend"
        dockerize_repo="Javid1e/${project_name}_dockerize"

        # Create repositories using GitHub API
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_backend\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_frontend\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_dockerize\"}"

    - name: Checkout Template Repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Initialize New Project
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo_url="git@github.com:Javid1e/${project_name}.git"
        backend_repo_url="git@github.com:Javid1e/${project_name}_backend.git"
        frontend_repo_url="git@github.com:Javid1e/${project_name}_frontend.git"
        dockerize_repo_url="git@github.com:Javid1e/${project_name}_dockerize.git"

        new_project_dir=$project_name

        # Clone template repository
        git clone --recurse-submodules git@github.com:Javid1e/full_django_nextjs_dockerize_template.git $new_project_dir
        cd $new_project_dir

        # Set new remotes
        git remote set-url origin $main_repo_url

        cd backend
        git remote set-url origin $backend_repo_url
        cd ..

        cd frontend
        git remote set-url origin $frontend_repo_url
        cd ..

        cd dockerize
        git remote set-url origin $dockerize_repo_url
        cd ..

        cd ..

        # Push changes to new repositories
        git add .
        git commit -m "Initialize new project with submodules"
        git push -u origin main

        cd backend
        git push -u origin main
        cd ..

        cd frontend
        git push -u origin main
        cd ..

        cd dockerize
        git push -u origin main
        cd ..
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      SSH_PRIVATE_KEY: ${{ secrets.SECRET }}
