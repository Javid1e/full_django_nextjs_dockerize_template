name: Create New Project Repository

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'The name of the new project'
        required: true

jobs:
  create-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create new repository
        id: create_repo
        uses: actions/github-script@v6
        with:
          script: |
            const octokit = github.getOctokit(process.env.PAT);
            const { data } = await octokit.rest.repos.createForAuthenticatedUser({
              name: github.event.inputs.project_name,
              private: true,
              description: `Repository for ${github.event.inputs.project_name}`
            });
            core.setOutput('repo_clone_url', data.clone_url);
        env:
          PAT: ${{ secrets.PAT }}

      - name: Set up git
        run: |
          git config --global user.email "abdollah.promail@gmail.com"
          git config --global user.name "Abdollah Mohebbi"

      - name: Clone the new repository
        run: |
          git clone ${{ steps.create_repo.outputs.repo_clone_url }} ${{ github.event.inputs.project_name }}
          cd ${{ github.event.inputs.project_name }}

      - name: Add frontend submodule
        run: |
          cd ${{ github.event.inputs.project_name }}
          git checkout -b frontend
          git submodule add -b frontend https://github.com/javid1e/full_frontend_nextjs_shadcn_template.git ${{ github.event.inputs.project_name }}_frontend
          git commit -m "Add frontend submodule"
          git push --set-upstream origin frontend

      - name: Add backend submodule
        run: |
          cd ${{ github.event.inputs.project_name }}
          git checkout -b backend
          git submodule add -b backend https://github.com/javid1e/full_backend_django_rest_template.git ${{ github.event.inputs.project_name }}_backend
          git commit -m "Add backend submodule"
          git push --set-upstream origin backend

      - name: Add dockerize submodule
        run: |
          cd ${{ github.event.inputs.project_name }}
          git checkout -b dockerize
          git submodule add -b dockerize https://github.com/javid1e/full_dockerize_django_nextjs_template.git ${{ github.event.inputs.project_name }}_dockerize
          git commit -m "Add dockerize submodule"
          git push --set-upstream origin dockerize

      - name: Push changes to main branch
        run: |
          cd ${{ github.event.inputs.project_name }}
          git checkout main
          git merge frontend --allow-unrelated-histories
          git merge backend --allow-unrelated-histories
          git merge dockerize --allow-unrelated-histories
          git commit -m "Merge all branches"
          git push
