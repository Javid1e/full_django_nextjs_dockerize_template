name: Create New Project

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Name of the new project'
        required: true

jobs:
  create-project:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}
        submodules: true
        submodule_token: ${{ secrets.GH_TOKEN }}

    - name: Create Repositories
      id: create_repos
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo="Javid1e/${project_name}"
        backend_repo="Javid1e/${project_name}_backend"
        frontend_repo="Javid1e/${project_name}_frontend"
        dockerize_repo="Javid1e/${project_name}_dockerize"

        # Create repositories using GitHub API
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_backend\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_frontend\"}"
        curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" https://api.github.com/user/repos -d "{\"name\":\"${project_name}_dockerize\"}"

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"

    - name: Initialize New Project
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        project_name="${{ github.event.inputs.project_name }}"
        main_repo_url="https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Javid1e/${project_name}.git"
        backend_repo_url="https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Javid1e/${project_name}_backend.git"
        frontend_repo_url="https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Javid1e/${project_name}_frontend.git"
        dockerize_repo_url="https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Javid1e/${project_name}_dockerize.git"

        new_project_dir=$project_name

        # Clone template repository
        git clone --recurse-submodules https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/Javid1e/full_django_nextjs_dockerize_template.git $new_project_dir
        cd $new_project_dir

        # Set new remotes for the main project
        git remote set-url origin $main_repo_url

        # Set new remotes for submodules without including tokens
        git submodule set-url backend $backend_repo_url
        git submodule set-url frontend $frontend_repo_url
        git submodule set-url dockerize $dockerize_repo_url
        git submodule update --init --recursive

        # Commit changes to the main repository
        git add .
        git commit -m "Initialize new project with submodules"

        # Configure submodule authentication
        git config --global url."https://x-access-token:${GH_TOKEN}@github.com/".insteadOf "https://github.com/"

        # Push changes to the main repository
        git push -u origin main

        # Push submodule changes
        cd backend
        git push -u origin main
        cd ..

        cd frontend
        git push -u origin main
        cd ..

        cd dockerize
        git push -u origin main
        cd ..
